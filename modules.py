# The MIT License (MIT)
# Copyright (c) 2023 penggrin

# meta developer: @PenggrinModules
# scope: hikka_only

from .. import loader, utils
import logging


logger = logging.getLogger(__name__)


@loader.tds
class MyModulesMod(loader.Module):
    """Lists all the currently installed modules"""

    strings = {
        "name": "MyModules",
        "amount": "<emoji document_id=5316573023094971227>üì¶</emoji> Right now there is <b>{}</b> modules loaded:\n",
        "partial_load": (
            "\n<emoji document_id=5328239124933515868>‚öôÔ∏è</emoji> <b>it's not yet all modules,"
            " Userbot is still loading</b>"
        ),
        "module": "<emoji document_id=5402093879316982515>‚ú®</emoji>",
        "core_module": "<emoji document_id=5400245067694747959>üí´</emoji>"
    }

    strings_ru = {
        "amount": "<emoji document_id=5316573023094971227>üì¶</emoji> –°–µ–π—á–∞—Å –∑–∞–≥—Ä—É–∂–µ–Ω–æ <b>{}</b> –º–æ–¥—É–ª–µ–π:",
        "partial_load": (
            "\n<emoji document_id=5328239124933515868>‚öôÔ∏è</emoji> <b>–≠—Ç–æ –Ω–µ –≤—Å–µ –º–æ–¥—É–ª–∏,"
            " –Æ–∑–µ—Ä–±–æ—Ç –µ—â—ë –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è</b>"
        ),
    }

    @loader.command(ru_doc="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏")
    async def modscmd(self, message):
        """List of all of the modules currently installed"""

        result = f"{self.strings('amount').format(str(len(self.allmodules.modules)))}\n"

        for mod in self.allmodules.modules:
            try:
                name = mod.strings["name"]
            except KeyError:
                name = mod.__clas__.__name__

            emoji = self.strings("core_module") if mod.__origin__.startswith("<core") else self.strings("module")
            result += f"\n {emoji} <code>{name}</code>"

        result += "" if self.lookup("Loader").fully_loaded else f"\n{self.strings('partial_load')}"

        await utils.answer(message, result)
